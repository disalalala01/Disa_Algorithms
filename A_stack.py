#---------------------------СТРУКТУРЫ ДАННЫХ---------------------------

#----------------СТЕК ИЛИ ОЧЕРЕДЬ LIFO----------------------------

#STACK FIRST IN FIRST OUT //// LAST IN FIRST OUT

# PUSH-ВНЕДРИТЬ  //////////// POP-ДОСТАТЬ   ////////////////// SIZE-СКОЛЬКО СЕЙЧАС //////////// TOP /////////IS_EMPTY - ТУТ ЛИ СТЕК/////////

"""
ТЕСТ К МОДУЛЮ СТЕК

>>> clear()
>>> is_empty()
True
>>> push(1)
>>> push(2)
>>> push(3)
>>> is_empty()
False
>>> pop()
3
>>> pop()
2
>>> pop()
1
>>> is_empty()
True
"""
#отвечает за тесты тесты должны быть эдинтичны этому

_stack = []

def push(x):
    """ДОБАВЛЯЕТ ЭЛЕМЕНТ

    >>> size = len(_stack)
    >>> push(5)
    >>> len(_stack) - size
    1
    >>> _stack[-1]
    5
    """
    _stack.append(x)

def pop():
    """УБИРАЕТ ЭЛЕМЕНТ С КОНЦА
    """
    x = _stack.pop()
    return x

def clear():
    _stack.clear()# remove all items in list

def is_empty():
    return len(_stack) == 0

if __name__ == "__main__":
    from doctest import testmod  #делает молчиливое тестирование всего функционала если есть ошибка воз
    testmod(verbose=True)#verbose=True показывает все тесты


#------------------------ПРОВЕРКА ПОСЛЕДОВАТЕЛЬНОСТИ СКОБОЧНОЙ ПОСЛЕДОВАТЕЛЬНОСТИ----------------------------

# А="" это корректно
# B = A это корректно
# C = AB это корректно
# "(((())))()((()))" это корректно
# "())(()" это не корректно
#  "[(])" это не корректно
